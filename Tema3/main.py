#The following code reads two input files, "gramatica.in" (translation: "grammar.in") and "cuvinte.in" (translation: "words.in"). 
#It creates a dictionary, "grammar", where the keys are non-terminal symbols and the values are lists of terminal and non-terminal symbols that they can produce.
#Then, for each word in "cuvinte.in", it checks whether it can be generated by the grammar. 
#If it can, it outputs "Cuvantul E acceptat" (translation: "word is accepted"), otherwise it outputs "Cuvantul NU E acceptat" (translation: "word is not accepted").
#Specifically, for each word in "cuvinte.in", the code initializes the current set of keys to the starting symbol 'S', sets the current index to 0, and sets a flag "word_accepted" to True. 
#Then, while the current index is less than the length of the word, the code computes the next set of keys that can be reached from the current set of keys using a production that matches the current letter of the word. 
#If no such production is found, the flag "word_accepted" is set to False and the loop is terminated. 
#If there are no more letters in the word, the code checks if any of the final keys can generate the string "1000" (lambda). If so, the word is accepted, otherwise it is rejected.


with open("gramatica.in", "r") as grammar_file:  #1
    grammar = {} #2
    for line in grammar_file:
        productions = line.split()
        grammar[productions[0]] = productions[1:]

with open("cuvinte.in", "r") as words_file: #3,4
    for word in words_file: #5
        word = word.strip()
        current_keys = ['S']
        current_index = 0
        word_accepted = True

        while current_index < len(word): #6
            next_keys = []
            letter = word[current_index]
            for key in current_keys:
                for production in grammar[key]:
                    if production[0] == letter and production[1] not in next_keys:
                        next_keys.append(production[1])
            if not next_keys: #7
                word_accepted = False
                break
            current_keys = next_keys
            current_index += 1
        
        if word_accepted: #8
            final_productions = []
            for key in current_keys:
                final_productions.extend(grammar[key])
            if "1000" in final_productions:
                print("Cuvantul E acceptat")
            else:
                print("Cuvantul NU E acceptat")
        else:
            print("Cuvantul NU E acceptat")
